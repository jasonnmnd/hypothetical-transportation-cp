{"ast":null,"code":"var _jsxFileName = \"/Users/jasondong/Documents/Duke Class Documents/ECE 458/ece-458/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport ParentPage from \"./components/parentPage/ParentPage\";\nimport AdminPage from \"./components/adminPage/AdminPage\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport LoginForm from \"./components/loginPage/LoginForm.js\";\nimport AdminUsersPage from \"./components/adminPage/pages/AdminUsersPage\";\nimport AdminStudentsPage from \"./components/adminPage/pages/AdminStudentsPage\";\nimport AdminRoutesPage from \"./components/adminPage/pages/AdminRoutesPage\";\nimport AdminSchoolsPage from \"./components/adminPage/pages/AdminSchoolsPage\";\nimport AccountPage from \"./components/parentPage/pages/AccountPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Login details, move to database for security\n  // useEffect(() => {\n  //   postData(\"http://localhost:3001/post-test\", {\n  //     email: details.email,\n  //     password: details.password,\n  //   });\n  // });\n  // Example POST method implementation:\n  // async function postData(url = \"\", data = {}) {\n  //   // Default options are marked with *\n  //   const response = await fetch(url, {\n  //     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n  //     mode: \"cors\", // no-cors, *cors, same-origin\n  //     cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n  //     credentials: \"same-origin\", // include, *same-origin, omit\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       // 'Content-Type': 'application/x-www-form-urlencoded',\n  //     },\n  //     redirect: \"follow\", // manual, *follow, error\n  //     referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n  //     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  //   });\n  //   return response.json(); // parses JSON response into native JavaScript objects\n  // }\n  //const [user, setUser] = useState({name: \"\", email: \"\"});\n  //Handle main login accross the whole app\n  const emptyUser = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    admin: false,\n    students: []\n  };\n  const adminUser = {\n    name: \"I'm an admin\",\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n    admin: true,\n    students: []\n  };\n  const parentUser = {\n    name: \"Virginia\",\n    email: \"parent@parent.com\",\n    password: \"parent123\",\n    admin: false,\n    students: [{\n      name: \"Al\",\n      id: \"123\",\n      school: \"A high school\",\n      route: \"#1\"\n    }, {\n      name: \"Hugo\",\n      id: \"456\",\n      school: \"B high school\",\n      route: \"#2\"\n    }, {\n      name: \"James\",\n      id: \"567\",\n      school: \"C high school\",\n      route: \"none\"\n    }]\n  };\n  const [user, setUser] = useState(emptyUser);\n  const [error, setError] = useState(\"\");\n\n  const parentLogin = details => {\n    //console.log(details);\n    //TODO: Change to implement backend with database\n    if (details.email === parentUser.email && details.password === parentUser.password) {\n      console.log(\"Logged in\"); //setError(\"\");\n\n      setUser(parentUser);\n    } else {\n      //console.log(\"Details do not match\");\n      setError(\"Details do not match!\");\n    }\n  };\n\n  const adminLogin = details => {\n    //console.log(details);\n    //TODO: Change to implement backend with database\n    if (details.email === adminUser.email && details.password === adminUser.password) {\n      console.log(\"Logged in\"); //setError(\"\");\n\n      setUser(adminUser);\n    } else {\n      //console.log(\"Details do not match\");\n      setError(\"Details do not match!\");\n    }\n  };\n\n  const Logout = () => {\n    setUser(emptyUser);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {\n          adminLogin: adminLogin,\n          parentLogin: parentLogin,\n          user: user,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/parent\",\n        element: /*#__PURE__*/_jsxDEV(ParentPage, {\n          user: user,\n          Logout: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/parent/account\",\n        element: /*#__PURE__*/_jsxDEV(AccountPage, {\n          user: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/*\",\n        element: /*#__PURE__*/_jsxDEV(AdminPage, {\n          user: user,\n          Logout: Logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/users\",\n        element: /*#__PURE__*/_jsxDEV(AdminUsersPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/students\",\n        element: /*#__PURE__*/_jsxDEV(AdminStudentsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/schools\",\n        element: /*#__PURE__*/_jsxDEV(AdminSchoolsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/routes\",\n        element: /*#__PURE__*/_jsxDEV(AdminRoutesPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"tiD6jT7Cjw8GuCH5F241iVOfeeI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jasondong/Documents/Duke Class Documents/ECE 458/ece-458/client/src/App.js"],"names":["React","useState","ParentPage","AdminPage","Routes","Route","Navigate","LoginForm","AdminUsersPage","AdminStudentsPage","AdminRoutesPage","AdminSchoolsPage","AccountPage","App","emptyUser","name","email","password","admin","students","adminUser","parentUser","id","school","route","user","setUser","error","setError","parentLogin","details","console","log","adminLogin","Logout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport ParentPage from \"./components/parentPage/ParentPage\";\nimport AdminPage from \"./components/adminPage/AdminPage\";\nimport { Routes, Route , Navigate} from \"react-router-dom\";\nimport LoginForm from \"./components/loginPage/LoginForm.js\"\nimport AdminUsersPage from \"./components/adminPage/pages/AdminUsersPage\";\nimport AdminStudentsPage from \"./components/adminPage/pages/AdminStudentsPage\";\nimport AdminRoutesPage from \"./components/adminPage/pages/AdminRoutesPage\";\nimport AdminSchoolsPage from \"./components/adminPage/pages/AdminSchoolsPage\";\nimport AccountPage from \"./components/parentPage/pages/AccountPage\";\nfunction App() {\n  //Login details, move to database for security\n\n  // useEffect(() => {\n  //   postData(\"http://localhost:3001/post-test\", {\n  //     email: details.email,\n  //     password: details.password,\n  //   });\n  // });\n\n  // Example POST method implementation:\n  // async function postData(url = \"\", data = {}) {\n  //   // Default options are marked with *\n  //   const response = await fetch(url, {\n  //     method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n  //     mode: \"cors\", // no-cors, *cors, same-origin\n  //     cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n  //     credentials: \"same-origin\", // include, *same-origin, omit\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       // 'Content-Type': 'application/x-www-form-urlencoded',\n  //     },\n  //     redirect: \"follow\", // manual, *follow, error\n  //     referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n  //     body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  //   });\n  //   return response.json(); // parses JSON response into native JavaScript objects\n  // }\n\n  //const [user, setUser] = useState({name: \"\", email: \"\"});\n\n  //Handle main login accross the whole app\n  const emptyUser = {\n    name:\"\",\n    email:\"\",\n    password:\"\",\n    admin:false,\n    students:[],\n  }\n\n  const adminUser = {\n    name:\"I'm an admin\",\n    email: \"admin@admin.com\",\n    password: \"admin123\",\n    admin:true,\n    students:[],\n  };\n  \n  const parentUser = {\n    name: \"Virginia\",\n    email: \"parent@parent.com\",\n    password: \"parent123\",\n    admin:false,\n    students:[\n      {\n        name:\"Al\",\n        id: \"123\",\n        school: \"A high school\",\n        route: \"#1\",\n      },\n      {\n        name:\"Hugo\",\n        id:\"456\",\n        school: \"B high school\",\n        route: \"#2\",\n      },\n      {\n        name:\"James\",\n        id:\"567\",\n        school: \"C high school\",\n        route: \"none\",\n      },\n    ],\n  };\n  \n\n  const [user, setUser] = useState(emptyUser);\n  const [error, setError] = useState(\"\");\n\n  const parentLogin = (details) => {\n    //console.log(details);\n\n    //TODO: Change to implement backend with database\n    if (\n      details.email === parentUser.email &&\n      details.password === parentUser.password\n    ) {\n      console.log(\"Logged in\");\n      //setError(\"\");\n      setUser(parentUser);\n    } else {\n      //console.log(\"Details do not match\");\n      setError(\"Details do not match!\");\n    }\n  };\n\n  const adminLogin = (details) => {\n    //console.log(details);\n\n    //TODO: Change to implement backend with database\n    if (\n      details.email === adminUser.email &&\n      details.password === adminUser.password\n    ) {\n      console.log(\"Logged in\");\n      //setError(\"\");\n      setUser(adminUser);\n    } else {\n      //console.log(\"Details do not match\");\n      setError(\"Details do not match!\");\n    }\n  };\n\n  const Logout = () => {\n    setUser(emptyUser);\n    return <Navigate to=\"/\"></Navigate>\n  };\n\n  return (\n      <div className=\"App\">\n        <Routes>\n          <Route path=\"/\" element={<LoginForm adminLogin={adminLogin} parentLogin={parentLogin} user={user} error={error}/>}></Route>\n          <Route path=\"/parent\" element={<ParentPage user={user} Logout={Logout}/>}></Route>\n          <Route path=\"/parent/account\" element={<AccountPage user={user}/>}></Route>\n          <Route exact path=\"/admin/*\" element={<AdminPage user={user} Logout={Logout}/>}></Route>\n          <Route exact path=\"/admin/users\" element={<AdminUsersPage />}></Route>\n          <Route exact path=\"/admin/students\" element={<AdminStudentsPage />}></Route>\n          <Route exact path=\"/admin/schools\" element={<AdminSchoolsPage />}></Route>\n          <Route exact path=\"/admin/routes\" element={<AdminRoutesPage />}></Route>\n        </Routes>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}